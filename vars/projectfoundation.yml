---
# Set paths for project foundation role
role_name       : "projectfoundation"
role_dir        : "{{ base_dir }}/roles/{{ role_name }}"

######################################################
# Variables for project foundation role
######################################################

# pf:
#     # vnet properties
#     vnet              :
#         address_space : "10.1.0.0/16"   # The address space must be 10.X.0.0/16 (where X value is between 1 and 255", default "10.1.0.0/16"
#     log_analytics     : true            # false (default), true
#     retention_in_days : 30        # (default) in Days Any values can have between (30 - 730)
#     la_sku            : "PerGB2018"       # (default) 
                                                          
# frlist:
#    - fr01:  #Mandatory Runner; do not delete or change
#         os_type             : "Linux"
#         publiciptype        : "Static"
#         registrationtoken   : 
#            - "{{ lookup('env','DEF_RUNNER_TOKEN') }}"
#         taglist             : 
#            - "{{ lookup('env','DEF_PRIVATE_RUNNER_TAG') }}"


##########################################################################################
#
# This module will work with defaults always; No customization is required by project teams.
# 
##########################################################################################


pf:
    # vnet properties
    vnet              :
        address_space : "10.1.0.0/16"    # The address space must be 10.X.0.0/16 (where X value is between 1 and 255", default "10.1.0.0/16"
    log_analytics     : false            # false (default), true
    # retention_in_days : 30             # (default) in Days Any values can have between (30 - 730)
    # la_sku            : "PerGB2018"    # (default) 

    # Add multiple subnets as per project requirement
    # subnets:                                                 # Optional                                            
    #   - key: snet01                                          # mandatory if subnets block is specified                                           
    #     name: subnet1                                        # mandatory if subnets block is specified     
    #     description: "The subnet for frontend applications"  # mandatory if subnets block is specified  
    #     cidr_block: "10.1.3.0/24"                            # mandatory if subnets block is specified                              
    #   - key: snet02
    #     name: subnet2
    #     description: "The subnet for backend applications"
    #     cidr_block: "10.1.4.0/24"

    # Custom nsg for custom subnets defined under subnets block
    # Each custom subnet should have a custom nsg, else the pipeline will fail
    # nsg_list:                                                 # Optional; mandatory if subnets block is specified
    #   - key: nsg01                                            # mandatory if nsg_list block is specified
    #     name: nsg_frontend                                    # mandatory if nsg_list block is specified
    #     subnet_name: subnet1                                  # mandatory if nsg_list block is specified and the subnet name should be same as defined in subnets block
    #     restrict_ssg_by_default: true                         # mandatory if nsg_list block is specified and possible values will be true or false.
                                                                # If true - Default SSG rules will be applied. 
    #     security_rules:                                       # optional if restrict_ssg_by_default is true, 
    #                                                             Mandatory if restrict_ssg_by_default is false,
    #                                                             If restrict_ssg_by_default is true then both default sgg rules and custom provided rules will be added, if only custom rules are needed then restrict_ssg_by_default should be false
    #       - {name: "CustomIPWhitelistingRule1", protocol: "*", source_address_prefix: [202.54.252.200, 115.117.111.92], destination_port_range: "22", priority: 400, direction: "Inbound", access: "Allow", source_port_range: "*", destination_address_prefix: "*"}
    #       - {name: "CustomIPWhitelistingRule2", protocol: "TCP", source_address_prefix: [202.54.252.200, 115.117.111.92], destination_port_range: "3389", priority: 401, direction: "Inbound", access: "Allow", source_port_range: "*", destination_address_prefix: "*"}
    #   - key: nsg02
    #     name: nsg_backend
    #     subnet_name: subnet2
    #     restrict_ssg_by_default: false
    #     security_rules:
    #       - {name: "CustomIPWhitelistingRule1", protocol: "*", source_address_prefix: [202.54.252.200, 115.117.111.92], destination_port_range: "22", priority: 400, direction: "Inbound", access: "Allow", source_port_range: "*", destination_address_prefix: "*"}
    #       - {name: "CustomIPWhitelistingRule2", protocol: "*", source_address_prefix: [202.54.252.200, 115.117.111.92], destination_port_range: "22", priority: 401, direction: "Outbound", access: "Allow", source_port_range: "*", destination_address_prefix: "*"}  


                                                  
frlist:
   - fr01:  #Mandatory Runner; do not delete or change
        os_type             : "Linux"
        publiciptype        : "Static"
        registrationtoken   : 
           - "{{ lookup('env','DEF_RUNNER_TOKEN') }}"
        taglist             : 
           - "{{ lookup('env','DEF_PRIVATE_RUNNER_TAG') }}"

